<?xml version="1.0"?>
<launch>
  <!-- open rviz with a config file -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gazebo_senai)/config/config.rviz"/>

  <!-- convert point cloud to laser scan -->
  <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/velodyne_points"/>
    <rosparam>
      target_frame: velodyne # Leave disabled to output scan in pointcloud frame
      transform_tolerance: 0.01
      min_height: -0.4 -->
      <!-- max_height: 1.0 -->
      <!-- angle_min: -1.5708 # -M_PI/2
      angle_max: 1.5708 # M_PI/2
      angle_increment: 0.0087 # M_PI/360.0
      scan_time: 0.3333
      range_min: 0.45
      range_max: 50.0
      use_inf: true
      inf_epsilon: 1.0 -->
      <!-- # Concurrency level, affects number of pointclouds queued for processing and number of threads used
      # 0 : Detect number of cores
      # 1 : Single threaded
      # 2->inf : Parallelism level
      concurrency_level: 0
    </rosparam>
  </node> -->

  <!-- gmapping-->
  <!-- <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
    <rosparam file="$(find gazebo_senai)/param/mapper.yaml"/>
    <rosparam>
      odom_frame: odom
      base_frame: base_link
      map_frame: map
      map_update_interval: 0.5 # Publish new map
      maxUrange: 110 # Should be just less than sensor range
      maxRange: 140 # Should be just greater than sensor range
      particles: 100 # Increased from 80
      # Update frequencies
      linearUpdate: 0.3
      angularUpdate: 0.5
      temporalUpdate: 2.0
      resampleThreshold: 0.5
      # Initial Map Size
      xmin: -100.0
      ymin: -100.0
      xmax: 100.0
      ymax: 100.0
      delta: 0.05
      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005
    </rosparam>
  </node> -->
</launch>